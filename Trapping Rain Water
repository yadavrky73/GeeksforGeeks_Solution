class Solution:
    def trappingWater(self, arr,n):
        #Code here
        mx=[0]*n
        mn=[0]*n
        mx[0]=arr[0]
        mn[n-1]=arr[n-1]
        for i in range(1,n):
            mx[i]=max(mx[i-1],arr[i])
        for j in range(n-2,-1,-1):
            mn[j]=max(mn[j+1],arr[j])
        w=[0]*n
        for i in range(n):
            w[i]=min(mx[i],mn[i])-arr[i]
        #print(mx,mn)
        #print(w)
        return sum(w)


if __name__ == "__main__":
        T=int(input())
        while(T>0):
            
            n=int(input())
            
            arr=[int(x) for x in input().strip().split()]
            obj = Solution()
            print(obj.trappingWater(arr,n))
            
            
            T-=1

